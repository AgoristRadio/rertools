#!/usr/bin/env ruby
require 'thor'
require_relative "../lib/rertools"
#puts Rertools::ShowNotesDownloader.new.download(10)
class Rer < Thor

  desc "ping", "check if I'm alive"

  def ping
    puts "pong"
  end

  desc "publish MP3_FILENAME", "Injects shownotes metadata into an mp3 file id3v2 tags, uploads the mp3, and posts the podcast on the website.
NOTE: [MP3_FILENAME] must be in the format of: realityexploitroundtable-EP[EPISODE_NUMBER].mp3"
  def publish(mp3_filename)
    current_path = Dir.pwd #File.dirname(__FILE__)
    full_file_path = current_path + "/" + mp3_filename
    episode_url = Rertools::Episode.new(full_file_path).publish
    puts "OK: Episode URL is #{episode_url}"
  end


  # old crap

=begin
  desc "shownotes_metadata [EPISODE_NUMBER]", "Display shownotes metadata scraped off the github page for a specific episode."
  def shownotes_metadata(episode_number)
    Rertools::Cli.new.shownotes_metadata(episode_number)
  end

  desc "inject_metadata [EPISODE_NUMBER] [MP3_FILENAME]", "Injects shownotes metadata into an mp3 file id3v2 tags."
  def inject_metadata(episode_number, mp3_filename)
    Rertools::Cli.new.inject_metadata(episode_number, mp3_filename)
  end

=end



=begin

  desc "start", "start server"
  method_option :environment,
                :default => "development",
                :aliases => "-e",
                :desc => "which enviroment you want server run."
  method_option :daemon,
                :type => :boolean,
                :default => false,
                :aliases => "-d",
                :desc => "runing on daemon mode?"

  def start
    puts "start #{options.inspect}"
  end

  method_option :delay,
                :default => 0,
                :aliases => "-w",
                :desc => "wait server finish it's job"

  desc "stop", "stop server"

  def stop
    puts "stop"
  end

  desc "restart", "restart server"

  def restart
    puts "restart"
  end
=end
end

Rer.start